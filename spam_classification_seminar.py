# -*- coding: utf-8 -*-
"""Spam_Classification_Seminar.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PzhJwzM41a_AdNFy_ak638IE8VqoVJIC
"""

from google.colab import files

uploaded = files.upload()

import pandas as pd
import io

from sklearn.model_selection import train_test_split

from sklearn.feature_extraction.text import TfidfVectorizer # word frequency detection

from sklearn.linear_model import LogisticRegression
import matplotlib.pyplot as plt
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix #evaluation metrics
import seaborn as sns

data = pd.read_csv(io.BytesIO(uploaded['emails.csv']))

X = data['text']
y = data['spam']

data.head()

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

tfidf_vectorizer = TfidfVectorizer()
X_train_tfidf = tfidf_vectorizer.fit_transform(X_train)
X_test_tfidf = tfidf_vectorizer.transform(X_test)

model = LogisticRegression()
model.fit(X_train_tfidf, y_train)

y_pred = model.predict(X_test_tfidf)

accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {(accuracy*100):.4f}")
print()
print(classification_report(y_test, y_pred, target_names = ["Ham", "Spam"]))
print()
conf_matrix = confusion_matrix(y_test, y_pred)
plt.figure(figsize=(6, 4))
sns.heatmap(conf_matrix, annot=True, cmap='Blues', fmt='d',
            xticklabels=['Ham', 'Spam'], yticklabels=['Ham', 'Spam'])
plt.xlabel('Predicted Data')
plt.ylabel('Test Data')
plt.title('Confusion Matrix')
plt.show()

input_message = input("Enter a message: ")
input_tfidf = tfidf_vectorizer.transform([input_message])

prediction = model.predict(input_tfidf)[0]

if prediction == 0:
    print("Prediction: NOT SPAM (HAM)")
else:
    print("Prediction: SPAM")